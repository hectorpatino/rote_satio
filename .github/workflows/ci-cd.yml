name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Set up operating system, ubunto and windows
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest]

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install package
        run: poetry install

      - name: Test with pytest
        run: poetry run pytest tests/ --cov=rote_satio --cov-report=xml

      - name: Use Codecov to track coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml   # coverage report

      - name: Build documentation
        run: poetry run make html --directory docs/

  cd:
    permissions:
      id-token: write
      contents: write
    
    # Only run this job if the "ci" job passes
    needs: ci

    # Only run this job if new work is pushed to "main"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # Set up operating system
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    # Define job steps
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0



#      - name: Use Python Semantic Release to prepare release
#        id: release
#        uses: python-semantic-release/python-semantic-release@v8.3.0
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to TestPyPI
        id: test_pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        #if: steps.release.outputs.released == 'true'
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Test install from TestPyPI
        #if: steps.release.outputs.released == 'true'
        id: test_install
        if: steps.test_pypi.outputs.published == 'true'
        run: |
            pip install \
            --index-url https://test.pypi.org/simple/ \
            --extra-index-url https://pypi.org/simple \
            rote_satio

      - name: Publish to PyPI
        id: pypi
        uses: pypa/gh-action-pypi-publish@release/v1
        #if: steps.release.outputs.released == 'true'
        if: steps.test_install.outputs.installed == 'true'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package distributions to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        #if: steps.release.outputs.released == 'true'
        if: steps.pypi.outputs.published == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
